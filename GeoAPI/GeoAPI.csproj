<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net20;net35-client;net35-cf;net40-client;net403-client;net45;netstandard1.0;portable-net4+sl50+win8+wpa81+wp8;portable-net403+sl50+win8+wpa81+wp8</TargetFrameworks>
    <NoWarn>1591</NoWarn>
    <OutputPath>$(SolutionDir)$(Configuration)\$(Platform)</OutputPath>
    <DocumentationFile>$(OutputPath)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>..\geoapi.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugType>pdbonly</DebugType>
  </PropertyGroup>

  <!-- Target CompactFramework 3.5 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net35-cf'">
    <TargetFrameworkIdentifier>.NETFramework</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
    <TargetFrameworkProfile>CompactFramework</TargetFrameworkProfile>

    <FrameworkPathOverride>$(MSBuildProgramFiles32)\Microsoft.NET\SDK\CompactFramework\v3.5\WindowsCE</FrameworkPathOverride>

    <RequiresFrameworkAssemblyReferences>true</RequiresFrameworkAssemblyReferences>

    <DefineConstants>$(DefineConstants);WindowsCE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_SERIALIZABLE_ATTRIBUTE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_NATIVE_ICLONEABLE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_APPLICATION_EXCEPTION</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_COM_VISIBLE_ATTRIBUTE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_GUID_ATTRIBUTE</DefineConstants>
  </PropertyGroup>

  <!-- Client Profile frameworks don't have built-in shortcuts, so we need to specify these. -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net35-client' ">
    <TargetFrameworkIdentifier>.NETFramework</TargetFrameworkIdentifier>
    <TargetFrameworkProfile>Client</TargetFrameworkProfile>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net40-client' ">
    <TargetFrameworkIdentifier>.NETFramework</TargetFrameworkIdentifier>
    <TargetFrameworkProfile>Client</TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net403-client' ">
    <TargetFrameworkIdentifier>.NETFramework</TargetFrameworkIdentifier>
    <TargetFrameworkProfile>Client</TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.0.3</TargetFrameworkVersion>
  </PropertyGroup>

  <!-- .NETStandard is the replacement for traditional / "old-style" PCLs, but
       there are still some platforms not covered by even .NETStandard 1.0 that
       we'd like to target, thus we still build some "old-style" PCLs. -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'portable-net4+sl50+win8+wpa81+wp8' ">
    <TargetFrameworkIdentifier>.NETPortable</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile>Profile328</TargetFrameworkProfile>

    <RequiresFrameworkAssemblyReferences>true</RequiresFrameworkAssemblyReferences>

    <DefineConstants>$(DefineConstants);PCL</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_INTERFACE_VARIANCE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_DOUBLE_TRYPARSE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_STRING_TOUPPERINVARIANT</DefineConstants>
  </PropertyGroup>

  <!-- Profile328 does not support LINQ-to-XML.  Weirdly, even though the only apparent difference
       between Profile328 and Profile336 is .NET 4.0 vs. 4.0.3, the latter supports LINQ-to-XML,
       whereas the former does not, even though LINQ-to-XML was added in .NET 3.5.  So if we want
       the PCL version of NetTopologySuite to support LINQ-to-XML, it needs to be on Profile336, so
       it needs to have GeoAPI target Profile336. -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'portable-net403+sl50+win8+wpa81+wp8' ">
    <TargetFrameworkIdentifier>.NETPortable</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile>Profile336</TargetFrameworkProfile>

    <RequiresFrameworkAssemblyReferences>true</RequiresFrameworkAssemblyReferences>

    <DefineConstants>$(DefineConstants);PCL</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_INTERFACE_VARIANCE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_DOUBLE_TRYPARSE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_STRING_TOUPPERINVARIANT</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net20' Or
                             '$(TargetFramework)' == 'net35' Or
                             '$(TargetFramework)' == 'net35-client' Or
                             '$(TargetFramework)' == 'net40' Or
                             '$(TargetFramework)' == 'net40-client' Or
                             '$(TargetFramework)' == 'net403' Or
                             '$(TargetFramework)' == 'net403-client' Or
                             '$(TargetFramework)' == 'net45' ">
    <RequiresFrameworkAssemblyReferences>true</RequiresFrameworkAssemblyReferences>

    <DefineConstants>$(DefineConstants);HAS_SERIALIZABLE_ATTRIBUTE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_NATIVE_ICLONEABLE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_APPLICATION_EXCEPTION</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_COM_VISIBLE_ATTRIBUTE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_GUID_ATTRIBUTE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_INTERFACE_VARIANCE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_DEFAULT_PARAMETERS</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_DOUBLE_TRYPARSE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_APPDOMAIN_GETASSEMBLIES</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_ASSEMBLY_GETEXPORTEDTYPES</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_STRING_TOUPPERINVARIANT</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard1.0' ">
    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
    <NETStandardPackageVersion>4.3.0</NETStandardPackageVersion>

    <DefineConstants>$(DefineConstants);HAS_INTERFACE_VARIANCE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_DEFAULT_PARAMETERS</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_DOUBLE_TRYPARSE</DefineConstants>
    <DefineConstants>$(DefineConstants);HAS_STRING_TOUPPERINVARIANT</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition=" '$(RequiresFrameworkAssemblyReferences)' == 'true' ">
    <Reference Include="System" />
    <Reference Include="System.Core" Condition=" '$(TargetFramework)' != 'net20' " />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.0' ">
    <PackageReference Include="System.Collections" Version="$(NETStandardPackageVersion)" />
    <PackageReference Include="System.Diagnostics.Tools" Version="$(NETStandardPackageVersion)" />
    <PackageReference Include="System.Globalization" Version="$(NETStandardPackageVersion)" />
    <PackageReference Include="System.IO" Version="$(NETStandardPackageVersion)" />
    <PackageReference Include="System.Reflection" Version="$(NETStandardPackageVersion)" />
    <PackageReference Include="System.Runtime" Version="$(NETStandardPackageVersion)" />
    <PackageReference Include="System.Runtime.Extensions" Version="$(NETStandardPackageVersion)" />
    <PackageReference Include="System.Threading" Version="$(NETStandardPackageVersion)" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="License.txt" />
    <None Include="..\geoapi.snk">
      <Link>geoapi.snk</Link>
    </None>
  </ItemGroup>

  <ItemGroup>
    <None Include="$(SolutionDir)geoapi.snk" />
  </ItemGroup>

  <Target Name="BeforeBuild">
    <Message Text="Building for '$(TargetFramework)'" />
  </Target>
</Project>
